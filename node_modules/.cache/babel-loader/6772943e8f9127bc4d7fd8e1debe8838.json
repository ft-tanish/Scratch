{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tanish\\\\Desktop\\\\Tanish\\\\React js\\\\Scratch-Web-App\\\\src\\\\components\\\\control\\\\Wait.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setWait } from \"../../redux/events/eventActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Wait = _ref => {\n  _s();\n\n  let {\n    events,\n    comp_id,\n    set_wait\n  } = _ref;\n  const [wait, setStateWait] = useState(0); // Set Wait value for current component\n\n  function handleChange(e) {\n    let val = parseInt(e.target.value);\n    setStateWait(val);\n    let curr = events.wait;\n    curr[comp_id] = val;\n    set_wait(curr);\n  }\n\n  return (\n    /*#__PURE__*/\n    // Wait Component\n    _jsxDEV(\"div\", {\n      className: \" text-center rounded bg-red-400 p-2 my-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 my-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-white\",\n          children: \"Wait\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"mx-2 p-1 py-0 text-center\",\n          type: \"number\",\n          value: wait,\n          onChange: e => handleChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: comp_id,\n        className: \"text-center bg-red-600 text-white px-2 py-1 my-2 text-sm cursor-pointer\",\n        children: [\"Wait \", wait, \" seconds\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this)\n  );\n}; // map state to component\n\n\n_s(Wait, \"odm6KMafb1vJY0zrepVJvfGOaQI=\");\n\n_c = Wait;\n\nconst mapStateToProps = state => {\n  return {\n    events: state.event\n  };\n}; // map function to component\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    set_wait: value => dispatch(setWait(value))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wait);\n\nvar _c;\n\n$RefreshReg$(_c, \"Wait\");","map":{"version":3,"names":["React","useState","connect","setWait","Wait","events","comp_id","set_wait","wait","setStateWait","handleChange","e","val","parseInt","target","value","curr","mapStateToProps","state","event","mapDispatchToProps","dispatch"],"sources":["C:/Users/Tanish/Desktop/Tanish/React js/Scratch-Web-App/src/components/control/Wait.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setWait } from \"../../redux/events/eventActions\";\r\n\r\nconst Wait = ({ events, comp_id, set_wait }) => {\r\n  const [wait, setStateWait] = useState(0);\r\n\r\n  // Set Wait value for current component\r\n  function handleChange(e) {\r\n    let val = parseInt(e.target.value);\r\n    setStateWait(val);\r\n    let curr = events.wait;\r\n    curr[comp_id] = val;\r\n    set_wait(curr);\r\n  }\r\n  return (\r\n    // Wait Component\r\n    <div className=\" text-center rounded bg-red-400 p-2 my-3\">\r\n      <div className=\"grid grid-cols-2 my-2\">\r\n        <div className=\"text-white\">Wait</div>\r\n        <input\r\n          className=\"mx-2 p-1 py-0 text-center\"\r\n          type=\"number\"\r\n          value={wait}\r\n          onChange={(e) => handleChange(e)}\r\n        />\r\n      </div>\r\n      <div\r\n        id={comp_id}\r\n        className=\"text-center bg-red-600 text-white px-2 py-1 my-2 text-sm cursor-pointer\"\r\n      >\r\n        Wait {wait} seconds\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// map state to component\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    events: state.event,\r\n  };\r\n};\r\n\r\n// map function to component\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    set_wait: (value) => dispatch(setWait(value)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Wait);\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,iCAAxB;;;AAEA,MAAMC,IAAI,GAAG,QAAmC;EAAA;;EAAA,IAAlC;IAAEC,MAAF;IAAUC,OAAV;IAAmBC;EAAnB,CAAkC;EAC9C,MAAM,CAACC,IAAD,EAAOC,YAAP,IAAuBR,QAAQ,CAAC,CAAD,CAArC,CAD8C,CAG9C;;EACA,SAASS,YAAT,CAAsBC,CAAtB,EAAyB;IACvB,IAAIC,GAAG,GAAGC,QAAQ,CAACF,CAAC,CAACG,MAAF,CAASC,KAAV,CAAlB;IACAN,YAAY,CAACG,GAAD,CAAZ;IACA,IAAII,IAAI,GAAGX,MAAM,CAACG,IAAlB;IACAQ,IAAI,CAACV,OAAD,CAAJ,GAAgBM,GAAhB;IACAL,QAAQ,CAACS,IAAD,CAAR;EACD;;EACD;IAAA;IACE;IACA;MAAK,SAAS,EAAC,0CAAf;MAAA,wBACE;QAAK,SAAS,EAAC,uBAAf;QAAA,wBACE;UAAK,SAAS,EAAC,YAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UACE,SAAS,EAAC,2BADZ;UAEE,IAAI,EAAC,QAFP;UAGE,KAAK,EAAER,IAHT;UAIE,QAAQ,EAAGG,CAAD,IAAOD,YAAY,CAACC,CAAD;QAJ/B;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAUE;QACE,EAAE,EAAEL,OADN;QAEE,SAAS,EAAC,yEAFZ;QAAA,oBAIQE,IAJR;MAAA;QAAA;QAAA;QAAA;MAAA,QAVF;IAAA;MAAA;MAAA;MAAA;IAAA;EAFF;AAoBD,CA/BD,C,CAiCA;;;GAjCMJ,I;;KAAAA,I;;AAkCN,MAAMa,eAAe,GAAIC,KAAD,IAAW;EACjC,OAAO;IACLb,MAAM,EAAEa,KAAK,CAACC;EADT,CAAP;AAGD,CAJD,C,CAMA;;;AACA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;EACvC,OAAO;IACLd,QAAQ,EAAGQ,KAAD,IAAWM,QAAQ,CAAClB,OAAO,CAACY,KAAD,CAAR;EADxB,CAAP;AAGD,CAJD;;AAMA,eAAeb,OAAO,CAACe,eAAD,EAAkBG,kBAAlB,CAAP,CAA6ChB,IAA7C,CAAf"},"metadata":{},"sourceType":"module"}