{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tanish\\\\Desktop\\\\Tanish\\\\React js\\\\Scratch-Web-App\\\\src\\\\components\\\\motion\\\\TurnClockwise.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setCharacterAngle } from \"../../redux/character/actions\";\nimport RedoIcon from \"@material-ui/icons/Redo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TurnClockWise = _ref => {\n  _s();\n\n  let {\n    character,\n    characterAngle,\n    comp_id\n  } = _ref;\n  const [angle, setAngle] = useState(0); // handle turn clockwise component\n\n  const handleClick = () => {\n    const el = document.getElementById(character.active);\n    const character_angle = character.characters.find(x => x.id === character.active);\n\n    if (character_angle) {\n      el.style.transform = `rotate(${character_angle.angle + angle}deg)`;\n      characterAngle(character_angle.angle + angle);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center rounded bg-blue-500 p-2 my-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-white\",\n        children: \"Rotate By:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"mx-2 p-1 py-0 text-center\",\n        type: \"number\",\n        value: angle,\n        onChange: e => setAngle(parseInt(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: comp_id,\n      className: `flex bg-blue-700 text-white px-2 py-1 mt-3 mb-1 text-sm cursor-pointer text-center`,\n      onClick: () => handleClick(),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex mx-auto\",\n        children: [\"Turn\", /*#__PURE__*/_jsxDEV(RedoIcon, {\n          className: \"mx-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), \" \", angle, \" degrees\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}; // mapping state to component\n\n\n_s(TurnClockWise, \"E2l0YpOAGAcj3Va0WyauqjJKwAc=\");\n\n_c = TurnClockWise;\n\nconst mapStateToProps = state => {\n  return {\n    character: state.character\n  };\n}; // mapping function to component\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    characterAngle: angle => dispatch(setCharacterAngle(angle))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TurnClockWise);\n\nvar _c;\n\n$RefreshReg$(_c, \"TurnClockWise\");","map":{"version":3,"names":["React","useState","connect","setCharacterAngle","RedoIcon","TurnClockWise","character","characterAngle","comp_id","angle","setAngle","handleClick","el","document","getElementById","active","character_angle","characters","find","x","id","style","transform","e","parseInt","target","value","mapStateToProps","state","mapDispatchToProps","dispatch"],"sources":["C:/Users/Tanish/Desktop/Tanish/React js/Scratch-Web-App/src/components/motion/TurnClockwise.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setCharacterAngle } from \"../../redux/character/actions\";\r\nimport RedoIcon from \"@material-ui/icons/Redo\";\r\n\r\nconst TurnClockWise = ({ character, characterAngle, comp_id }) => {\r\n  const [angle, setAngle] = useState(0);\r\n\r\n  // handle turn clockwise component\r\n  const handleClick = () => {\r\n    const el = document.getElementById(character.active);\r\n    const character_angle = character.characters.find(\r\n      (x) => x.id === character.active\r\n    );\r\n    if (character_angle) {\r\n      el.style.transform = `rotate(${character_angle.angle + angle}deg)`;\r\n      characterAngle(character_angle.angle + angle);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"text-center rounded bg-blue-500 p-2 my-3\">\r\n      <div className=\"grid grid-cols-2\">\r\n        <div className=\"text-white\">Rotate By:</div>\r\n        <input\r\n          className=\"mx-2 p-1 py-0 text-center\"\r\n          type=\"number\"\r\n          value={angle}\r\n          onChange={(e) => setAngle(parseInt(e.target.value))}\r\n        />\r\n      </div>\r\n      <div\r\n        id={comp_id}\r\n        className={`flex bg-blue-700 text-white px-2 py-1 mt-3 mb-1 text-sm cursor-pointer text-center`}\r\n        onClick={() => handleClick()}\r\n      >\r\n        <div className=\"flex mx-auto\">\r\n          Turn\r\n          <RedoIcon className=\"mx-2\" /> {angle} degrees\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// mapping state to component\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    character: state.character,\r\n  };\r\n};\r\n\r\n// mapping function to component\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    characterAngle: (angle) => dispatch(setCharacterAngle(angle)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TurnClockWise);\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,OAAOC,QAAP,MAAqB,yBAArB;;;AAEA,MAAMC,aAAa,GAAG,QAA4C;EAAA;;EAAA,IAA3C;IAAEC,SAAF;IAAaC,cAAb;IAA6BC;EAA7B,CAA2C;EAChE,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,CAAD,CAAlC,CADgE,CAGhE;;EACA,MAAMU,WAAW,GAAG,MAAM;IACxB,MAAMC,EAAE,GAAGC,QAAQ,CAACC,cAAT,CAAwBR,SAAS,CAACS,MAAlC,CAAX;IACA,MAAMC,eAAe,GAAGV,SAAS,CAACW,UAAV,CAAqBC,IAArB,CACrBC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASd,SAAS,CAACS,MADJ,CAAxB;;IAGA,IAAIC,eAAJ,EAAqB;MACnBJ,EAAE,CAACS,KAAH,CAASC,SAAT,GAAsB,UAASN,eAAe,CAACP,KAAhB,GAAwBA,KAAM,MAA7D;MACAF,cAAc,CAACS,eAAe,CAACP,KAAhB,GAAwBA,KAAzB,CAAd;IACD;EACF,CATD;;EAWA,oBACE;IAAK,SAAS,EAAC,0CAAf;IAAA,wBACE;MAAK,SAAS,EAAC,kBAAf;MAAA,wBACE;QAAK,SAAS,EAAC,YAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE,SAAS,EAAC,2BADZ;QAEE,IAAI,EAAC,QAFP;QAGE,KAAK,EAAEA,KAHT;QAIE,QAAQ,EAAGc,CAAD,IAAOb,QAAQ,CAACc,QAAQ,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAAT;MAJ3B;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAUE;MACE,EAAE,EAAElB,OADN;MAEE,SAAS,EAAG,oFAFd;MAGE,OAAO,EAAE,MAAMG,WAAW,EAH5B;MAAA,uBAKE;QAAK,SAAS,EAAC,cAAf;QAAA,gCAEE,QAAC,QAAD;UAAU,SAAS,EAAC;QAApB;UAAA;UAAA;UAAA;QAAA,QAFF,OAEiCF,KAFjC;MAAA;QAAA;QAAA;QAAA;MAAA;IALF;MAAA;MAAA;MAAA;IAAA,QAVF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAuBD,CAtCD,C,CAwCA;;;GAxCMJ,a;;KAAAA,a;;AAyCN,MAAMsB,eAAe,GAAIC,KAAD,IAAW;EACjC,OAAO;IACLtB,SAAS,EAAEsB,KAAK,CAACtB;EADZ,CAAP;AAGD,CAJD,C,CAMA;;;AACA,MAAMuB,kBAAkB,GAAIC,QAAD,IAAc;EACvC,OAAO;IACLvB,cAAc,EAAGE,KAAD,IAAWqB,QAAQ,CAAC3B,iBAAiB,CAACM,KAAD,CAAlB;EAD9B,CAAP;AAGD,CAJD;;AAMA,eAAeP,OAAO,CAACyB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CxB,aAA7C,CAAf"},"metadata":{},"sourceType":"module"}